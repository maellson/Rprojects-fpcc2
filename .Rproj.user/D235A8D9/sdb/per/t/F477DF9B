{
    "collab_server" : "",
    "contents" : "---\ntitle: \"fpcc2-problema02-chk02\"\nauthor: \"Maelson Marques de Lima\"\ndate: \"11 de maio de 2016\"\noutput: word_document\n---\n#FPCC2-p2-c2\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(dplyr)\nlibrary(stringi)\nlibrary(ggplot2)\nlibrary(GGally)\n\ntheme_set(theme_bw())\n```\n\n## ORGANIZANDO OS DADOS:\n\n```{r bds, message=FALSE, warning=FALSE, results='asis', echo=TRUE}\n\n\nmovies <- read.csv(\"~/Rprojetos/Rprojects-fpcc2/bd-movies/movies.csv\")\n #View(movies)\nratings <- read.csv(\"~/Rprojetos/Rprojects-fpcc2/bd-movies/ratings.csv\")\nmovies_join_ratings = merge(x = movies, y = ratings, by = \"movieId\", all.y = TRUE)\n\n\nnew_bd<-read.csv(\"~/Rprojetos/Rprojects-fpcc2/bd-movies/filmes_tratados.csv\")\n\nView(new_bd)\n\n\n\nrtfm<- read.csv(\"~/Rprojetos/Rprojects-fpcc2/bd-movies/ratings-por-filme.csv\") \nView(rtfm)\n\n\n\n\n##Remove os hifens dos campos de gênero para não atrapalhar na contagem\n\n#REMOVENDO OS HIFENS\n###############################################\n\nhifem<-\"-\"\nmovies_join_ratings$genres<-as.character(movies_join_ratings$genres)\n\nfor(i in 1:length(movies_join_ratings$genres)){\n  movies_join_ratings[i,3]<-gsub(hifem,\"\",movies_join_ratings[i,3])}\n\n###############################################\n\n\n#CRIA NOVA COLUNA COM O CONTADOR DE GENEROS\n###############################################\ncolunaNova<-c()#recebe valores para nova coluna\n\n#atribui o contador de generos à colunaNova\nfor(i in 1:length(movies_join_ratings$genres)){ colunaNova[i]<- as.numeric(stri_stats_latex(movies_join_ratings[i,3])[4])}\n\n\n#cria nova coluna com nome ngeneros para receber os valores\n#Foi adicionado nova coluna com os resultados de colunaNova\nmovies_join_ratings<-cbind(movies_join_ratings, ngeneros=colunaNova) \n\n###############################################\n\n\n\n#COLOCA ZERO EM SEM GENEROS##\n###############################################\n\n#Atribui valor zero \"0\" onde não houver gênero\nfor(i in 1:length(movies_join_ratings$genres)){\n  if(movies_join_ratings[i,3]==\"(no genres listed)\"){\n    movies_join_ratings[i,7]<-0\n    }\n  }\nmovies_join_ratings$ngeneros<-as.numeric(movies_join_ratings$ngeneros)\n\n###############################################\n\n\n\n##AGRUPAMENTO DOS DADOS##\n###############################################\n\n#Agrupamento com os movieId\ngrupoMovie<-movies_join_ratings%>%group_by(movieId)%>%dplyr::summarise(\n  medianaNota= median(rating),num_generos= median(ngeneros))\n\nknitr::kable(grupoMovie[1:10, 1:2], caption = \"Mediana, apenas das 10 primeiras linhas da tabela, das notas e gêneros para cada filme:\")\n\n#Observe que as melhores médias são para os grupos com 07, 05 e 03 gêneros.\n#Mas, neste caso não foi levado em consideração a frequência. \n\n\n\n#AGRUPAMENTO POR GÊNERO\n\n\n\ngrupoGen<-movies_join_ratings%>%group_by(ngeneros)%>%dplyr::summarise(\n  medianaNota= median(rating))\n\n\n#TABLE GROUPGENRE\n\nknitr::kable(grupoGen, caption = \"Medianas de Cada gênero\")\n\n\n\n###############################################\n\n\n```\n\n\n##QUESTÃO-01:\n1.\tNormalmente os filmes têm vários gêneros. \nExiste uma relação entre em quantos gêneros os filmes se encaixam e a avaliação média que os filmes recebem? \nMais especificamente: se consideramos a média dos filmes com 1, 2, 3 ... gêneros, existe alguma quantidade de gêneros num mesmo filme que em média recebe avaliações melhores? Caso exista, estime a diferença nas médias entre essa combinação e filmes com apenas um gênero.\n\n\n##ANÁLISE DOS DADOS PARA RESPOSTAS:\n\n    o que pude observar é que existe uma baixa correlação entre o número de gêneros com a nota atribuída a um filme. Vemos que a covariancia e a correlação entre os dois valores é muito baixa, tanto em sua forma bruta como agrupada.\n    \n```{r corVar, message=FALSE, warning=FALSE, results='asis', echo=TRUE}\n#COVARIÂNCIA\ncov(movies_join_ratings$rating,movies_join_ratings$ngeneros)\n\n#CORRELAÇÃO\n\ncor(movies_join_ratings$rating,movies_join_ratings$ngeneros)\n\n```\n\n  Observe que mesmmo após o agrupamento a correlação entre as duas parece muito baixa:\n  \n\n```{r corM, message=FALSE, warning=FALSE, results='asis', echo=TRUE}\ncor(grupoMovie$medianaNota,grupoMovie$num_generos)\n\n```\n\n\n\n    O histograma abaixo mostra qual a maior concentração de gêneros, mas sabe-se que existem filmes com mais avaliações que outros.Por exemplo, podemos ter 100 avaliações para um filme com apenas 1 gênero, enquanto apenas 1 avaliação para um filme com muitos gêneros. Essa diversidade dificulta as estimativas.\n\n```{r hist, message=FALSE, warning=FALSE, results='asis', echo=TRUE}\n\n#HISTOGRAMA DAS MÉDIAS DE GENEROS EM CADA FILMES\nggplot(grupoMovie, aes(x = num_generos)) + geom_histogram( binwidth = 1, colour = \"black\", fill = \"white\")+ggtitle(\"HISTOGRAMA DOS GÊNEROS\")\n\n\n```\n\n    O caso da diferença entre os maiores valores temos que a diferença é a mesma, 0.5, já que é de 4 para 3,5. \n    \n```{r dif, message=FALSE, warning=FALSE, results='asis', echo=TRUE}\n\nmelhorNota_mediana = grupoGen[4, \"medianaNota\"] - grupoGen[2, \"medianaNota\"]\nprint(paste(\"Melhora na média observada:\", melhorNota_mediana))\n\nmelhorNota_mediana = grupoGen[6, \"medianaNota\"] - grupoGen[2, \"medianaNota\"]\nprint(paste(\"Melhora na média observada:\", melhorNota_mediana))\n\nmelhorNota_mediana = grupoGen[8, \"medianaNota\"] - grupoGen[2, \"medianaNota\"]\nprint(paste(\"Melhora na média observada:\", melhorNota_mediana))\n\n```\n\n\n    Agora a estmiativa de melhores notas com relação ao número de gêneros, para cada diferença entre 1 e (3,5,7)\n\n\n```{r difperm, message=FALSE, warning=FALSE, results='asis', echo=TRUE}\n\nlibrary(resample)\n\ngrupoMovie7<-grupoMovie%>%filter(num_generos=='7'|num_generos=='1')\n\n\npermutationTest2(grupoMovie7, median(medianaNota), treatment = num_generos)\n\n  b = bootstrap(grupoMovie7$medianaNota, mean)\n  CI.percentile(b, probs = c(.025, .975))\n\n  b2 = bootstrap2(grupoMovie7, median(grupoMovie7$medianaNota), treatment = grupoMovie7$num_generos)\n  CI.percentile(b2, probs = c(.025, .975))\n  \n  \n## generos 05 e 01\n  \n  \ngrupoMovie5<-grupoMovie%>%filter(num_generos=='5'|num_generos=='1')\n\n\npermutationTest2(grupoMovie5, median(medianaNota), treatment = num_generos)\n\n  b = bootstrap(grupoMovie5$medianaNota, mean)\n  CI.percentile(b, probs = c(.025, .975))\n\n  b2 = bootstrap2(grupoMovie5, median(grupoMovie7$medianaNota), treatment = grupoMovie5$num_generos)\n  CI.percentile(b2, probs = c(.025, .975))\n  \n#generos 03-01\n  \n  grupoMovie3<-grupoMovie%>%filter(num_generos=='3'|num_generos=='1')\n\n\npermutationTest2(grupoMovie3, median(medianaNota), treatment = num_generos)\n\n  b = bootstrap(grupoMovie3$num_generos,mean)\n  CI.percentile(b, probs = c(.025, .975))\n\n  b2 = bootstrap2(grupoMovie3, median(grupoMovie3$medianaNota), treatment = grupoMovie3$num_generos)\n  CI.percentile(b2, probs = c(.025, .975))\n\n\n\n```\n\n\n##NOVOS HISTOGRAMAS DAS AMOSTRAS:\n\n    Os histogramas já diferem bastante dos gerados anteriormente.\n\n```{r histnovos, message=FALSE, warning=FALSE, results='asis', echo=TRUE}\n\nmovies_join_ratings$ngeneros<-as.numeric(movies_join_ratings$ngeneros)\n\nmovies_join_ratings$rating<-as.numeric(movies_join_ratings$rating)\n\nmv2<-movies_join_ratings%>%select(rating,ngeneros)\n\n\n\n##HISTOGRAMA RATING\n\nsample(mv2$rating, 100) %>% mean()\n\n# Média x amostras com n = 100\ndist_original2 = mv2$rating\nsample_size2 <- 50\nnum_samples2 <- 100\n\nsamples_means2 <- c()\nfor(i in seq(1, num_samples2)){\n  a_sample <- sample(dist_original2, sample_size2)\n  samples_means2[i] <- mean(a_sample)\n}\nggplot(data.frame(samples_means2), aes(samples_means2))+ geom_histogram() + ggtitle(\"Histograma das amostras dos ratings\")\n\n#RESULTADO: A quantidade maior de notas está entre 3,2 e 3,8\n\n\n##HISTOGRAMA GÊNEROS\n\nsample(mv2$ngeneros, 100) %>% mean()\n\n# Média de 200 amostras com n = 100\ndist_originalg = mv2$ngeneros\nsample_sizeg <- 50\nnum_samplesg <- 100\n\nsamples_meansg <- c()\nfor(i in seq(1, num_samplesg)){\n  a_sample <- sample(dist_originalg, sample_sizeg)\n  samples_meansg[i] <- mean(a_sample)\n}\nggplot(data.frame(samples_meansg), aes(samples_meansg))+ geom_histogram()+ ggtitle(\"Histograma das amostras dos gêneros\")\n\n#RESPOSTA: A maior parte dos gêneros ficou entre 2.5 e 3.0\n\n\n\n```\n\n\n##GRÁFICOS COM INTERVALOS DE CONFIANÇA\n\n```{r IC, message=FALSE, warning=FALSE, results='asis', echo=TRUE }\n\n\n#GRÁFICO DE IC\nggplot(mv2, aes(x = mv2$ngeneros, y = mv2$rating)) + \n  stat_summary(fun.y = mean, geom = \"point\") + \n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", colour = \"blue\", width = 0.2)+xlab(\"gêneros\")+ylab(\"Notas\")+ggtitle(\"Gráfico com barras de intervalo de confiança entre Gênero e Notas\")\n\n\n\n#utilizando o método completo\n\n\nsample(mv2$rating, 100) %>% mean()\n\n# Média de 200 amostras com n = 100\ndist_original = mv2$rating\nsample_size <- 50\nnum_samples <- 100\n\nsamples_means <- c()\nfor(i in seq(1, num_samples)){\n  a_sample <- sample(dist_original, sample_size)\n  samples_means[i] <- mean(a_sample)\n}\n\n\n\n\nlibrary(\"Rmisc\", quietly = T)\nlibrary(dplyr)\n\npop_mean <- mean(dist_original)\n\nsample_cis <- data.frame(upper = c(), mean = c(), lower = c())\nfor(i in seq(1, num_samples)){\n  a_sample <- sample(dist_original, sample_size)\n  interval <- CI(a_sample, ci = 0.95)\n  sample_cis <- rbind(sample_cis, data.frame(mean = interval[\"mean\"], \n                                             lower = interval[\"lower\"], \n                                             upper = interval[\"upper\"]))\n}\nsample_cis <- sample_cis %>% \n  mutate(contains_pop_mean = (upper >= pop_mean & lower <= pop_mean)) \n\n# Demooooora...\nboot_cis <- data.frame(upper = c(), mean = c(), lower = c())\nfor(i in seq(1, num_samples)){\n  a_sample <- sample(dist_original, sample_size)\n  interval <- CI.percentile(bootstrap(a_sample, mean, R = 1000))\n  boot_cis <- rbind(boot_cis, data.frame(mean = mean(interval), \n                                         lower = interval[1], \n                                         upper = interval[2]))\n}\n\nboot_cis <- boot_cis %>% \n  mutate(contains_pop_mean = (upper >= pop_mean & lower <= pop_mean)) \n\nsample_cis %>% \n  ggplot(aes(x = 1:nrow(sample_cis), y = mean, colour = contains_pop_mean)) +\n  geom_point() + \n  geom_errorbar(aes(ymin = lower, ymax = upper)) + \n  geom_hline(aes(yintercept=mean(mean(dist_original))))+ggtitle(\"Gráfico-01 Intervalo de confiança bootstrap\")\n\nboot_cis %>% \n  ggplot(aes(x = 1:nrow(sample_cis), y = mean, colour = contains_pop_mean)) +\n  geom_point() + \n  geom_errorbar(aes(ymin = lower, ymax = upper)) + \n  geom_hline(aes(yintercept=mean(mean(dist_original))))+ggtitle(\"Gráfico-02 Intervalo de confiança bootstrap\")\n\n\n```\n\n",
    "created" : 1463275512447.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2418112357",
    "id" : "F477DF9B",
    "lastKnownWriteTime" : 1463960947,
    "last_content_update" : 1463960947580,
    "path" : "~/Rprojetos/Rprojects-fpcc2/fpcc2-p2c2.Rmd",
    "project_path" : "fpcc2-p2c2.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}