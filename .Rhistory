print(paste("Diferença na media observada:", round(dif_media_31), "Seria Melhor Ficção"))
ft2_31<-filter(ft2, Genero=='Animação'| Genero=="Ficção")
# Retorna a diferença nas médias entre o grupos de y
# nos índices com valor de x igual a baseline após embaralhar x.
repete_experimento_de_diff = function(x, y, baseline){
embaralhado = x[sample(NROW(x))]
baseline_mean = mean(y[which(embaralhado == baseline)])
other_mean = mean(y[which(embaralhado != baseline)])
return(other_mean - baseline_mean)
}
#O  experimento medindo as média para Ficção
num_experimentos = 1000#Rodando mil vezes
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(ft2_31$Genero, ft2_31$Renda, "Ficção"))
summary(experimentos)
quantas_aconteceram = length(which(experimentos$diferenca >= dif_media_31$mediar))
probabilidade = quantas_aconteceram / num_experimentos
print(paste("Este Evento ocorreu: ",quantas_aconteceram,"vezes" ))
print(paste("A probabilidade de ocorrência é de: ",probabilidade))
# Retorna a diferença nas médias entre o grupos de y
# nos índices com valor de x igual a baseline após embaralhar x.
repete_experimento_de_diff = function(x, y, baseline){
embaralhado = x[sample(NROW(x))]
other_mean = median(y[which(embaralhado != baseline)])
baseline_mean = median(y[which(embaralhado == baseline)])
}
#O  experimento medindo as médias Ficção --PÚBLICO
return(other_mean - baseline_mean)
num_experimentos = 1000#Rodando mil vezes
experimentos = data_frame(i = 1:num_experimentos)
rowwise() %>%
experimentos = experimentos %>%
mutate(diferenca = repete_experimento_de_diff(ft4$Genero, ft4$Publico, "Ficção"))
medias_ft4<-group_by(ft4,AnoLancamento)%>%summarise(mediaR=mean(Renda),mediaP=mean(Publico))
knitr::kable(medias_ft4, caption = "Médias de Renda e Publico dos anos de decréscimo")
#Aqui é possível perceber que dentro desses anos os filmes de ficção ciêntífica tiveram tanto renda quando Público bem maior que os demais.
medias_ft4<-group_by(ft4, Genero)%>%summarise(mediaR=mean(Renda),mediaP=mean(Publico))
#View(medias_ft4)
knitr::kable(medias_ft4, caption = "Médias de Renda e Publico dos anos dos gêneros")
medias_ft4<-group_by(ft4, Genero)%>%summarise(mediaR=median(Renda),mediaP=median(Publico))
#Ficção - Documentário Média Público
dif_mediap_21 = medias_ft4[2,3] - medias_ft4[1,3]
print(paste("Diferença na mediana observada:", round(dif_mediap_21),".Seria Melhor Ficção"))
#Ficção - Documentário Média Renda
dif_mediar_21=medias_ft4[2,2]-medias_ft4[1,2]
print(paste("Diferença na media observada:", round(dif_mediar_21), ".Seria Melhor Ficção"))
repete_experimento_de_diff = function(x, y, baseline){
embaralhado = x[sample(NROW(x))]
baseline_mean = median(y[which(embaralhado == baseline)])
other_mean = median(y[which(embaralhado != baseline)])
return(other_mean - baseline_mean)
}
#O  experimento medindo as médias Ficção --PÚBLICO
num_experimentos = 1000#Rodando mil vezes
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(ft4$Genero, ft4$Publico, "Ficção"))
#Demora um absurdo!!!
ggplot(experimentos, aes(x = diferenca/1e3)) +
geom_histogram(binwidth =30 , colour = "darkblue", fill = "white")
#Tive que adicionar um valor alto para o binwith, as diferenças de valores variam muito em alguns casos.
summary(experimentos)
quantas_aconteceram = length(which(experimentos$diferenca >= dif_mediap_21$mediaP))
probabilidade = quantas_aconteceram / num_experimentos
print(paste("Este Evento ocorreu: ",quantas_aconteceram,"vezes" ))
print(paste("A probabilidade de ocorrência é de: ",probabilidade))
repete_experimento_de_diff = function(x, y, baseline){
embaralhado = x[sample(NROW(x))]
baseline_mean = median(y[which(embaralhado == baseline)])
other_mean = median(y[which(embaralhado != baseline)])
return(other_mean - baseline_mean)
}
#O  experimento medindo as médias Ficção --PÚBLICO
num_experimentos = 1000#Rodando mil vezes
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(ft4$Genero, ft4$Publico, "Documentário"))
#Demora um absurdo!!!
ggplot(experimentos, aes(x = diferenca/1e3)) +
geom_histogram(binwidth =30 , colour = "darkblue", fill = "white")
#Tive que adicionar um valor alto para o binwith, as diferenças de valores variam muito em alguns casos.
summary(experimentos)
quantas_aconteceram = length(which(experimentos$diferenca >= dif_mediap_21$mediaP))
probabilidade = quantas_aconteceram / num_experimentos
print(paste("Este Evento ocorreu: ",quantas_aconteceram,"vezes" ))
print(paste("A probabilidade de ocorrência é de: ",probabilidade))
medias_ft4<-group_by(ft4, Genero)%>%summarise(mediaR=median(Renda),mediaP=median(Publico))
knitr::kable(medias_ft4, caption = "Médias de Renda e Publico dos anos dos gêneros")
#Ficção - Documentário Média Público
dif_mediap_21 = medias_ft4[2,3] - medias_ft4[1,3]
print(paste("Diferença na mediana observada:", round(dif_mediap_21),".Seria Melhor Ficção"))
#Ficção - Documentário Média Renda
dif_mediar_21=medias_ft4[2,2]-medias_ft4[1,2]
print(paste("Diferença na media observada:", round(dif_mediar_21), ".Seria Melhor Ficção"))
```
**Iniciando as probabilidades**
PROBABILIDADE PARA MÉDIAS DE PÚBLICO:
```{r prob2, echo=TRUE, message=FALSE, warning=FALSE, results='asis'}
repete_experimento_de_diff = function(x, y, baseline){
embaralhado = x[sample(NROW(x))]
baseline_mean = median(y[which(embaralhado == baseline)])
other_mean = median(y[which(embaralhado != baseline)])
return(other_mean - baseline_mean)
}
#O  experimento medindo as médias Ficção --PÚBLICO
num_experimentos = 1000#Rodando mil vezes
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(ft4$Genero, ft4$Publico, "Documentário"))
View(experimentos)
ggplot(experimentos, aes(x = diferenca/1e3)) +
geom_histogram(binwidth =30 , colour = "darkblue", fill = "white")
summary(experimentos)
quantas_aconteceram = length(which(experimentos$diferenca >= dif_mediap_21$mediaP))
probabilidade = quantas_aconteceram / num_experimentos
print(paste("Este Evento ocorreu: ",quantas_aconteceram,"vezes" ))
print(paste("A probabilidade de ocorrência é de: ",probabilidade))
medias_ft4<-group_by(ft4, Genero)%>%summarise(mediaR=mean(Renda),mediaP=mean(Publico))
dif_mediap_21 = medias_ft4[2,3] - medias_ft4[1,3]
print(paste("Diferença na mediana observada:", round(dif_mediap_21),".Seria Melhor Ficção"))
#Ficção - Documentário Média Renda
dif_mediar_21=medias_ft4[2,2]-medias_ft4[1,2]
print(paste("Diferença na media observada:", round(dif_mediar_21), ".Seria Melhor Ficção"))
medias_ft4<-group_by(ft4, Genero)%>%summarise(mediaR=mean(Renda),mediaP=mean(Publico))
#View(medias_ft4)
medias_ft4<-group_by(ft4, Genero)%>%summarise(mediaR=mean(Renda),mediaP=mean(Publico))
knitr::kable(medias_ft4, caption = "Médias de Renda e Publico dos anos dos gêneros")
#Ficção - Documentário Média Público
dif_mediap_21 = medias_ft4[2,3] - medias_ft4[1,3]
print(paste("Diferença na mediana observada:", round(dif_mediap_21),".Seria Melhor Ficção"))
#Ficção - Documentário Média Renda
dif_mediar_21=medias_ft4[2,2]-medias_ft4[1,2]
print(paste("Diferença na media observada:", round(dif_mediar_21), ".Seria Melhor Ficção"))
# nos índices com valor de x igual a baseline após embaralhar x.
# Retorna a diferença nas médias entre o grupos de y
repete_experimento_de_diff = function(x, y, baseline){
baseline_mean = mean(y[which(embaralhado == baseline)])
embaralhado = x[sample(NROW(x))]
other_mean = mean(y[which(embaralhado != baseline)])
return(other_mean - baseline_mean)
#O  experimento medindo as médias Ficção --PÚBLICO
num_experimentos = 1000#Rodando mil vezes
}
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
#Demora um absurdo!!!
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(ft4$Genero, ft4$Publico, "Documentário"))
repete_experimento_de_diff = function(x, y, baseline){
embaralhado = x[sample(NROW(x))]
baseline_mean = mean(y[which(embaralhado == baseline)])
other_mean = mean(y[which(embaralhado != baseline)])
return(other_mean - baseline_mean)
}
#O  experimento medindo as médias Ficção --PÚBLICO
num_experimentos = 1000#Rodando mil vezes
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(ft4$Genero, ft4$Publico, "Ficção"))
#Demora um absurdo!!!
ggplot(experimentos, aes(x = diferenca/1e3)) +
geom_histogram(binwidth =30 , colour = "darkblue", fill = "white")
#Tive que adicionar um valor alto para o binwith, as diferenças de valores variam muito em alguns casos.
summary(experimentos)
quantas_aconteceram = length(which(experimentos$diferenca >= dif_mediap_21$mediaP))
probabilidade = quantas_aconteceram / num_experimentos
print(paste("Este Evento ocorreu: ",quantas_aconteceram,"vezes" ))
print(paste("A probabilidade de ocorrência é de: ",probabilidade))
#O  experimento medindo as médias Ficção --RENDA
num_experimentos = 1000#Rodando mil vezes
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(ft4$Genero, ft4$Renda, "Ficção"))
#Demora um absurdo!!!
ggplot(experimentos, aes(x = diferenca/1e3)) +
geom_histogram(binwidth =30 , colour = "darkblue", fill = "white")
#Tive que adicionar um valor alto para o binwith, as diferenças de valores variam muito em alguns casos.
summary(experimentos)
quantas_aconteceram = length(which(experimentos$diferenca >= dif_mediar_21$mediaR))
probabilidade = quantas_aconteceram / num_experimentos
print(paste("Este Evento ocorreu: ",quantas_aconteceram,"vezes" ))
print(paste("A probabilidade de ocorrência é de: ",probabilidade))
##Intervalo de confiança para  Ficção > aNIMAÇÃO  --MÉDIA
#Gerenaod os valores para o bootrap
exp_com_bootstrap <- function(x, y){
repeticoes = 1000 # Experimento com 1000 reptições
boot_x <- sample(x, size = NROW(x), replace = TRUE) # aqui é o bootstrap
boot_y <- sample(y, size = NROW(y), replace = TRUE) # de novo!
return(mean(boot_x) - mean(boot_y))
}
experimentos = data_frame(i = 1:num_experimentos)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = exp_com_bootstrap(ft4[ft4$Genero=="Ficção",]$Renda,ft4[ft4$Genero=="Documentário",]$Renda ))
ggplot(experimentos, aes(x = diferenca/1e3)) +
geom_histogram(binwidth = 100, colour = "darkorange", fill = "white")
summary(experimentos)
# IC com 90%:
#"Portanto em 90% com (margem +-0.5) das repetições as médias ficaram entre:  "
alpha = .1
quantile(experimentos$diferenca, probs = c(alpha/2, 1 - alpha/2))
# IC com 95%:
#Portanto em 95% das repetições, com margem de +-2,5  as médias ficaram entre:
alpha = .05
quantile(experimentos$diferenca, probs = c(alpha/2, 1 - alpha/2))
dif_mediar_21=medias_ft4[2,2]-medias_ft4[1,2]
print(paste("Diferença na media observada:", round(dif_mediar_21), ".Seria Melhor Ficção"))
boxplot(ft1$Genero~ft1$Publico)
mode(ft1$Genero)
ft1$Genero<-as.character(ft1$Genero)
boxplot(ft1$Genero~ft1$Publico)
ft1$Publico<-as.numeric(ft1$Publico)
ft1$Genero<-as.character(ft1$Genero)
boxplot(ft1$Genero~ft1$Publico)
View(ft1)
boxplot(ft1$Publico~~ft1$Genero)
boxplot(ft1$Publico~ft1$Genero)
p<-ggplot(ft1, aes(Genero, Publico))
library(ggplot2)
library(GGally)
p<-ggplot(ft1, aes(Genero, Publico))
p<-p+geom_boxplot( aes(fill=Genero))
p
p<-ggplot(ft1, aes(Genero, Publico/1e3))
p<-p+geom_boxplot( aes(fill=Genero))
p
p<-ggplot(ft1, aes(Genero, Publico/1e4))
p<-p+geom_boxplot( aes(fill=Genero))
p
View(ft1)
t<-ft1$Publico
table(t)
c?ount()
?count()
as.data.frame(table(t))
as.data.frame(table(t<100000))
as.data.frame(table(t<1000000))
as.data.frame(table(t<10000000))
ft1<-filter(ft1,ft1$Publico<1000000)
filmes_tratados<-filter(filmes_tratados,Genero!='Videomusical')
#names(filmes_tratados)
#Agora limitar as informações com as quais irei tratar: Gênero e Publico e remover outliers(publico >=1000 ). Acredito que faça mais sentido, trabalhar com filmes que tiveram um público considerável.
#transforma caracteres
ft1<-filmes_tratados[, c(3,8,11)]#Titulo, Genero e Publico
ft1$Publico<-as.character(ft1$Publico)
#View(ft1)
#estatística descritiva sobre a tabela agrupada:
ponto<-'\\.'
for(i in 1:length(ft1$Publico)){
ft1[i,3]<-gsub(ponto,"",ft1[i,3])}
#transforma numérico
ft1$Publico<-as.numeric(ft1$Publico)
ft1$Genero<-as.character(ft1$Genero)
p<-ggplot(ft1, aes(Genero, Publico/1e4))
p<-p+geom_boxplot( aes(fill=Genero))
p
ft1<-filter(ft1, ft1$Publico>1000)#miores que 1mil espectadores
table(filmes_tratados$Genero)
#Obtemos valores que podem atrapalhar na análise, pois a quantidade de filmes dos gêneros Animação e videomusical são muito baixos. mas Vídeos de animação tem valores altos de renda e público.Sendo assim, será removido apenas o gênero Videomusical.
#filtro para remover estes gêneros:
filmes_tratados<-filter(filmes_tratados,Genero!='Videomusical')
#Agora limitar as informações com as quais irei tratar: Gênero e Publico e remover outliers(publico >=1000 ). Acredito que faça mais sentido, trabalhar com filmes que tiveram um público considerável.
#names(filmes_tratados)
ft1<-filmes_tratados[, c(3,8,11)]#Titulo, Genero e Publico
#transforma caracteres
ft1$Publico<-as.character(ft1$Publico)
#estatística descritiva sobre a tabela agrupada:
#View(ft1)
ponto<-'\\.'
for(i in 1:length(ft1$Publico)){
ft1[i,3]<-gsub(ponto,"",ft1[i,3])}
#transforma numérico
ft1$Publico<-as.numeric(ft1$Publico)
ft1$Genero<-as.character(ft1$Genero)
ft1<-filter(ft1, ft1$Publico>1000)#miores que 1mil espectadores
library(dplyr)
library(stringi)
library(ggplot2)
library(GGally)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(GGally)
library(stringi)
theme_set(theme_bw())
```
filmes_tratados<-filter(filmes_tratados,Genero!='Videomusical')
#Agora limitar as informações com as quais irei tratar: Gênero e Publico e remover outliers(publico >=1000 ). Acredito que faça mais sentido, trabalhar com filmes que tiveram um público considerável.
#names(filmes_tratados)
ft1<-filmes_tratados[, c(3,8,11)]#Titulo, Genero e Publico
#transforma caracteres
#estatística descritiva sobre a tabela agrupada:
ft1$Publico<-as.character(ft1$Publico)
#View(ft1)
ponto<-'\\.'
for(i in 1:length(ft1$Publico)){
ft1[i,3]<-gsub(ponto,"",ft1[i,3])}
#transforma numérico
ft1$Publico<-as.numeric(ft1$Publico)
ft1$Genero<-as.character(ft1$Genero)
ft1<-filter(ft1, ft1$Publico>1000)#miores que 1mil espectadores
ft1<-filter(ft1,ft1$Publico<1000000)
View(ft1)
p<-ggplot(ft1, aes(Genero, Publico/1e4))
p<-p+geom_boxplot( aes(fill=Genero))
p
p<-ggplot(ft1, aes(Genero, Publico/1e3))
p<-p+geom_boxplot( aes(fill=Genero))
p
install.packages(tdyr)
experimento = data_frame(tratamento= "placebo", melhora = c(54, 51, 58, 44, 55, 52, 42, 47, 58, 46))
experimento = rbind(experimento, data_frame(tratamento = "droga", melhora = c(54, 73, 53, 70, 73, 68, 52, 65, 65)))
experimento$tratamento = factor(experimento$tratamento)
ggpairs(experimento)
View(experimento)
# melhora observada como média:
medias = experimento %>%
group_by(tratamento) %>%
summarise(media = mean(melhora))
View(medias)
melhora_media = medias[1, "media"] - medias[2, "media"]
print(paste("Melhora na média observada:", melhora_media))
repete_experimento_de_diff = function(x, y, baseline){
embaralhado = x[sample(NROW(x))]
baseline_mean = mean(y[which(embaralhado == baseline)])
other_mean = mean(y[which(embaralhado != baseline)])
return(other_mean - baseline_mean)
num_experimentos = 100
experimentos = data_frame(i = 1:num_experimentos)
}
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = repete_experimento_de_diff(experimento$tratamento, experimento$melhora, "placebo"))
ggplot(experimentos, aes(x = diferenca))+
geom_histogram(binwidth = 1, colour = "darkblue", fill = "white")
summary(experimentos)
quantas_aconteceram = length(which(experimentos$diferenca >= melhora_media$media))
probabilidade = quantas_aconteceram / num_experimentos
quantas_aconteceram
probabilidade
repeticoes = 1000 # pelo menos 1000, mas mais não faz mal.
exp_com_bootstrap <- function(x, y){
boot_x <- sample(x, size = NROW(x), replace = TRUE) # aqui é o bootstrap
boot_y <- sample(y, size = NROW(y), replace = TRUE) # de novo!
return(mean(boot_x) - mean(boot_y))
}
experimentos = data_frame(i = 1:repeticoes)
experimentos = experimentos %>%
rowwise() %>%
mutate(diferenca = exp_com_bootstrap(experimento[experimento$tratamento != "placebo",]$melhora,
experimento[experimento$tratamento == "placebo",]$melhora))
ggplot(experimentos, aes(x = diferenca)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white")
summary(experimentos)
# IC com 95%:
alpha = .1
quantile(experimentos$diferenca, probs = c(alpha/2, 1 - alpha/2))
# IC com 97,5%:
alpha = .05
quantile(experimentos$diferenca, probs = c(alpha/2, 1 - alpha/2))
permutationTest2(experimento, mean(melhora), treatment = tratamento)
library(resample)
permutationTest2(experimento, mean(melhora), treatment = tratamento)
b = bootstrap(experimento$melhora, mean)
CI.percentile(b, probs = c(.025, .975))
b2 = bootstrap2(experimento, mean(melhora), treatment = tratamento)
CI.percentile(b2, probs = c(.025, .975))
b2.median = bootstrap2(experimento, median(melhora), treatment = tratamento)
CI.percentile(b2.median, probs = c(.025, .975))
b2 = bootstrap2(experimento, mean(melhora), treatment = tratamento)
CI.percentile(b2, probs = c(.5, .950))
View(filmes_tratados)
ft1<-filter(filmes_tratados,Genero=="Ficção" | Genero=="Animação")
View(ft1)
table(ft1)
table(ft1$Genero)
df<-filter(ft1,Genero=="Animação")
table(df$Genero)
library("Rmisc", quietly = T)
library(dplyr)
pop_mean <- mean(dist_original)
sample_cis <- data.frame(upper = c(), mean = c(), lower = c())
for(i in seq(1, num_samples)){
a_sample <- sample(dist_original, sample_size)
interval <- CI(a_sample, ci = 0.95)
sample_cis <- rbind(sample_cis, data.frame(mean = interval["mean"],
lower = interval["lower"],
upper = interval["upper"]))
}
sample_cis <- sample_cis %>%
sample(lastfm$news, 100) %>% mean()
# Média de 200 amostras com n = 100
lastfm = read.csv("~/Rprojetos/fpcc2-master/02-inferencia/dados/experimento-lastfm.csv")
str(lastfm)
lastfm = select(lastfm, news, ecletic)
lastfm %>% ggplot(aes(news)) + geom_histogram(binwidth = 10)
lastfm %>% ggplot(aes(ecletic)) + geom_histogram(binwidth = 100)
sample(lastfm$news, 100) %>% mean()
# Média de 200 amostras com n = 100
dist_original = lastfm$news
sample_size <- 50
num_samples <- 100
samples_means <- c()
for(i in seq(1, num_samples)){
a_sample <- sample(dist_original, sample_size)
samples_means[i] <- mean(a_sample)
}
ggplot(data.frame(samples_means), aes(samples_means)) + geom_histogram()
library("Rmisc", quietly = T)
library(dplyr)
pop_mean <- mean(dist_original)
sample_cis <- data.frame(upper = c(), mean = c(), lower = c())
for(i in seq(1, num_samples)){
a_sample <- sample(dist_original, sample_size)
interval <- CI(a_sample, ci = 0.95)
sample_cis <- rbind(sample_cis, data.frame(mean = interval["mean"],
lower = interval["lower"],
upper = interval["upper"]))
}
sample_cis <- sample_cis %>%
mutate(contains_pop_mean = (upper >= pop_mean & lower <= pop_mean))
# Demooooora...
boot_cis <- data.frame(upper = c(), mean = c(), lower = c())
for(i in seq(1, num_samples)){
a_sample <- sample(dist_original, sample_size)
interval <- CI.percentile(bootstrap(a_sample, mean, R = 1000))
boot_cis <- rbind(boot_cis, data.frame(mean = mean(interval),
lower = interval[1],
upper = interval[2]))
}
boot_cis <- boot_cis %>%
mutate(contains_pop_mean = (upper >= pop_mean & lower <= pop_mean))
sample_cis %>%
ggplot(aes(x = 1:nrow(sample_cis), y = mean, colour = contains_pop_mean)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_hline(aes(yintercept=mean(mean(dist_original))))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringi)
library(ggplot2)
library(GGally)
theme_set(theme_bw())
```
movies <- read.csv("~/Rprojetos/Rprojects-fpcc2/bd-movies/movies.csv")
#View(movies)
#Tabela ratings
ratings <- read.csv("~/Rprojetos/Rprojects-fpcc2/bd-movies/ratings.csv")
#Dados Um --Base 01
movies_join_ratings = merge(x = movies, y = ratings, by = "movieId", all.y = TRUE)
#View(movies_join_ratings)
#Dados Dois --Base 02 (Filmes Brasileiros Lançados - 1995 a 2014)
filmes_tratados<-read.csv("~/Rprojetos/Rprojects-fpcc2/bd-movies/filmes_tratados.csv")
View(filmes_tratados)
pf(5,3,6)
1-pf(5,3,6)
1-pf(13.57,3,20)
1-pf(5,3,20)
pf(5,3,20)
pf(5,20,3)
pf(5,3,20)
?pf()
df(5,3,20)
1-df(5,3,20)
df(3,20)
df(13,3,20)
df(4,3,20)
df(5,3,20)
qf(5,3,20)
qf(5,3,20)
1-pf(5,3,20)
1-pf(5,4,12)
pf(5,4,12)
df(5,4,12)
qf(5,4,12)
qf(0.95,4,12)
qf(0.5,4,12)
qf(0.05,4,12)
qf(0.05,3,20)
qf(0.95,3,20)
qf(0.95,3,6)
qf(0.95,3,20)
Pf(0.95,3,20)
pf(0.95,3,20)
pf(0.05,3,20)
pf(5,3,20)
qf(0.05,3,20)
qf(0.05,3,1)
qf(0.95,3,1)
qf(0.95,3,20)
qf(0.95,4,12)
qf(0.95,4,8)
qf(0.95,4,12)
qf(0.95,12,4)
rf(0.95,4,12)
rf(5,4,12)
pf(5,4,12)
qf(5,4,12)
qf(0.05,4,12)
rf(16,4,12)
rf(1,4,12)
rf(5,4,12)
qf(0.05,4,20)
qf(0.95,4,20)
qf(0.95,4,12)
